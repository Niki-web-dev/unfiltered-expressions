/**
 * Skipped minification because the original files appears to be already minified.
 * Original file: /npm/inertia-plugin@0.6.0/dist/runtime.iife.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
'use strict';
function e(e, n) {
  if (!(e instanceof n)) {
    throw new TypeError('Cannot call a class as a function');
  }
}
function n(e, n) {
  for (var t = 0; t < n.length; t++) {
    var i = n[t];
    i.enumerable = i.enumerable || false;
    i.configurable = true;
    if ('value' in i) i.writable = true;
    Object.defineProperty(e, i.key, i);
  }
}
function t(e, t, i) {
  if (t) n(e.prototype, t);
  if (i) n(e, i);
  return e;
}
function i(e, n, t) {
  if (n in e) {
    Object.defineProperty(e, n, { value: t, enumerable: true, configurable: true, writable: true });
  } else {
    e[n] = t;
  }
  return e;
}
(function () {
  var n = (function () {
    function n() {
      e(this, n);
      this._namespaces = [];
    }
    t(n, [
      {
        key: 'addNamespace',
        value: function e(e, n) {
          return this._namespaces.push(i({}, e, n)), this;
        },
      },
      {
        key: 'namespaces',
        get: function e() {
          return this._namespaces;
        },
      },
    ]);
    return n;
  })();
  window.InertiaPlugin || (window.InertiaPlugin = new n());
})();
